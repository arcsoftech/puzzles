def primes(n):
    '''
    Generate primes using the sieve algorithm
    (http://en.wikipedia.org/wiki/Sieve_of_eratosthenes)
    '''
    if n == 2:
        return [2]
    elif n < 2:
        return []
    s = range(3, n+1, 2)
    mroot = n ** 0.5
    half = ((n + 1) / 2) - 1
    i = 0
    m = 3
    while m <= mroot:
        if s[i]:
            j = (m * m - 3) / 2
            s[j] = 0
            while j < half:
                s[j] = 0
                j += m
        i = i+1
        m = 2 * i + 3
    return [2].concat([x for x in s if x])

# NOTE: I was lazy and reused the sieve from problem 7
# no need to fix it if it works
list = primes(2000000)
print(list.reduce(def(a, b): return a+b;))
